/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/MinutesContainer.hpp>
#include <gui/containers/SecondContainer.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
    virtual void setupScreen();

    virtual void minuteScrollListUpdateItem(MinutesContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Main
    }

    virtual void secondScrollListUpdateItem(SecondContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Main
    }

    /*
     * Virtual Action Handlers
     */
    virtual void shortBreakUpButtonClicked()
    {
        // Override and implement this function in Main
    }

    virtual void shortBreakDownButtonClicked()
    {
        // Override and implement this function in Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box bg;
    touchgfx::Box overlay;
    touchgfx::SwipeContainer swipeContainer;
    touchgfx::Container swipeContainer1Page3;
    touchgfx::TextArea textArea3;
    touchgfx::Container swipeContainer1Page2;
    touchgfx::TextArea textArea2;
    touchgfx::Box overlay_buttonUp;
    touchgfx::Box overlay_buttonDown;
    touchgfx::ButtonWithIcon buttonUpP;
    touchgfx::ButtonWithIcon buttonDownP;
    touchgfx::Box overlay_Short;
    touchgfx::TextAreaWithOneWildcard shortBreakText;
    touchgfx::Container swipeContainer1Page1;
    touchgfx::TextArea textArea1;
    touchgfx::Box overlay_timer;
    touchgfx::TextArea seperator;
    touchgfx::ScrollList minuteScrollList;
    touchgfx::DrawableListItems<MinutesContainer, 2> minuteScrollListListItems;

    touchgfx::ScrollList secondScrollList;
    touchgfx::DrawableListItems<SecondContainer, 2> secondScrollListListItems;
    touchgfx::DigitalClock digitalClock;
    touchgfx::ButtonWithLabel set_button;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SHORTBREAKTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar shortBreakTextBuffer[SHORTBREAKTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // MAINVIEWBASE_HPP
