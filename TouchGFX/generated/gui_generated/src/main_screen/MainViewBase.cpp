/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    updateItemCallback(this, &MainViewBase::updateItemCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    bg.setPosition(0, 0, 240, 320);
    bg.setColor(touchgfx::Color::getColorFromRGB(240, 91, 86));

    overlay.setPosition(0, 8, 240, 48);
    overlay.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    overlay.setAlpha(20);

    swipeContainer.setXY(0, 0);
    swipeContainer.setSwipeCutoff(50);
    swipeContainer.setEndSwipeElasticWidth(50);

    swipeContainer1Page3.setWidth(240);
    swipeContainer1Page3.setHeight(320);

    textArea3.setXY(23, 15);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T_RESOURCEID3));
    swipeContainer1Page3.add(textArea3);
    swipeContainer.add(swipeContainer1Page3);

    swipeContainer1Page2.setWidth(240);
    swipeContainer1Page2.setHeight(320);

    textArea2.setXY(13, 15);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_RESOURCEID2));
    swipeContainer1Page2.add(textArea2);

    overlay_buttonUp.setPosition(170, 95, 60, 60);
    overlay_buttonUp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    overlay_buttonUp.setAlpha(20);
    swipeContainer1Page2.add(overlay_buttonUp);

    overlay_buttonDown.setPosition(170, 166, 60, 60);
    overlay_buttonDown.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    overlay_buttonDown.setAlpha(20);
    swipeContainer1Page2.add(overlay_buttonDown);

    buttonUpP.setXY(170, 95);
    buttonUpP.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID));
    buttonUpP.setIconXY(7, 17);
    buttonUpP.setAction(buttonCallback);
    swipeContainer1Page2.add(buttonUpP);

    buttonDownP.setXY(170, 166);
    buttonDownP.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID));
    buttonDownP.setIconXY(7, 17);
    buttonDownP.setAction(buttonCallback);
    swipeContainer1Page2.add(buttonDownP);

    overlay_Short.setPosition(13, 95, 146, 131);
    overlay_Short.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    overlay_Short.setAlpha(20);
    swipeContainer1Page2.add(overlay_Short);

    shortBreakText.setXY(38, 120);
    shortBreakText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    shortBreakText.setLinespacing(0);
    Unicode::snprintf(shortBreakTextBuffer, SHORTBREAKTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I1NR).getText());
    shortBreakText.setWildcard(shortBreakTextBuffer);
    shortBreakText.resizeToCurrentText();
    shortBreakText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VVMO));
    swipeContainer1Page2.add(shortBreakText);
    swipeContainer.add(swipeContainer1Page2);

    swipeContainer1Page1.setWidth(240);
    swipeContainer1Page1.setHeight(320);

    textArea1.setXY(29, 15);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_RESOURCEID1));
    swipeContainer1Page1.add(textArea1);

    overlay_timer.setPosition(38, 66, 164, 74);
    overlay_timer.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    overlay_timer.setAlpha(20);
    swipeContainer1Page1.add(overlay_timer);

    seperator.setXY(112, 86);
    seperator.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    seperator.setLinespacing(0);
    seperator.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SC4Z));
    swipeContainer1Page1.add(seperator);

    minuteScrollList.setPosition(52, 77, 60, 50);
    minuteScrollList.setHorizontal(false);
    minuteScrollList.setCircular(true);
    minuteScrollList.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    minuteScrollList.setSwipeAcceleration(10);
    minuteScrollList.setDragAcceleration(10);
    minuteScrollList.setNumberOfItems(26);
    minuteScrollList.setPadding(0, 0);
    minuteScrollList.setSnapping(true);
    minuteScrollList.setDrawableSize(60, 0);
    minuteScrollList.setDrawables(minuteScrollListListItems, updateItemCallback);
    swipeContainer1Page1.add(minuteScrollList);

    secondScrollList.setPosition(123, 77, 60, 53);
    secondScrollList.setHorizontal(false);
    secondScrollList.setCircular(true);
    secondScrollList.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    secondScrollList.setSwipeAcceleration(10);
    secondScrollList.setDragAcceleration(10);
    secondScrollList.setNumberOfItems(60);
    secondScrollList.setPadding(0, 0);
    secondScrollList.setSnapping(true);
    secondScrollList.setDrawableSize(60, 0);
    secondScrollList.setDrawables(secondScrollListListItems, updateItemCallback);
    swipeContainer1Page1.add(secondScrollList);
    swipeContainer.add(swipeContainer1Page1);
    swipeContainer.setSelectedPage(1);

    digitalClock.setPosition(70, 291, 100, 22);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    digitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LFMR));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock.setTime24Hour(10, 10, 0);

    add(__background);
    add(bg);
    add(overlay);
    add(swipeContainer);
    add(digitalClock);
}

void MainViewBase::setupScreen()
{
    minuteScrollList.initialize();
    for (int i = 0; i < minuteScrollListListItems.getNumberOfDrawables(); i++)
    {
        minuteScrollListListItems[i].initialize();
    }
    secondScrollList.initialize();
    for (int i = 0; i < secondScrollListListItems.getNumberOfDrawables(); i++)
    {
        secondScrollListListItems[i].initialize();
    }
}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonUpP)
    {
        //shortBreakUpButtonClicked
        //When buttonUpP clicked call virtual function
        //Call shortBreakUpButtonClicked
        shortBreakUpButtonClicked();
    }
    else if (&src == &buttonDownP)
    {
        //shortBreakDownButtonClicked
        //When buttonDownP clicked call virtual function
        //Call shortBreakDownButtonClicked
        shortBreakDownButtonClicked();
    }
}

void MainViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &minuteScrollListListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        MinutesContainer* cc = (MinutesContainer*)d;
        minuteScrollListUpdateItem(*cc, itemIndex);
    }
    else if (items == &secondScrollListListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        SecondContainer* cc = (SecondContainer*)d;
        secondScrollListUpdateItem(*cc, itemIndex);
    }
}
